package view;

import java.net.*;
import java.io.*;

public class UDPChatClient {
    private DatagramSocket socket;
    private InetAddress serverAddress;
    private int serverPort;

    public UDPChatClient(String serverAddress, int serverPort) {
        try {
            this.socket = new DatagramSocket();
            this.serverAddress = InetAddress.getByName(serverAddress);
            this.serverPort = serverPort;
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // 发送消息到服务器
    public void sendMessage(String message) {
        try {
            byte[] sendData = message.getBytes();
            DatagramPacket sendPacket = new DatagramPacket(sendData, sendData.length, serverAddress, serverPort);
            socket.send(sendPacket);  // 发送数据报
            System.out.println("发送: " + message);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    // 接收来自服务器的消息
    public String receiveMessage() {
        try {
            byte[] receiveData = new byte[1024];
            DatagramPacket receivePacket = new DatagramPacket(receiveData, receiveData.length);
            socket.receive(receivePacket);  // 接收数据报
            return new String(receivePacket.getData(), 0, receivePacket.getLength());
        } catch (IOException e) {
            e.printStackTrace();
        }
        return null;
    }

    // 关闭 socket
    public void close() {
        socket.close();
    }

    public static void main(String[] args) {
        UDPChatClient client = new UDPChatClient("localhost", 9876);

        // 启动接收消息线程
        new Thread(() -> {
            while (true) {
                String response = client.receiveMessage();
                if (response != null) {
                    System.out.println("接收到服务器的消息: " + response);
                }
            }
        }).start();

        // 启动发送消息的线程
        try (BufferedReader reader = new BufferedReader(new InputStreamReader(System.in))) {
            while (true) {
                System.out.print("请输入消息: ");
                String message = reader.readLine();
                if (message.equals("exit")) {
                    break;  // 输入 exit 时退出
                }
                client.sendMessage(message);
            }
        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            client.close();
        }
    }
}
